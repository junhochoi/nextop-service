
version = '1.0-SNAPSHOT'

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'se.transmode.gradle:gradle-docker:1.2'
        classpath 'org.ajoberstar:gradle-git:0.8.0'
    }
}

subprojects {
    apply plugin: 'java'

    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    repositories {
        maven {
            url 'https://repository.apache.org/content/groups/public/'
        }
        mavenCentral()
    }

    dependencies {
        compile group: 'net.sourceforge.argparse4j', name: 'argparse4j', version: '0.4.4'
        compile group: 'io.reactivex', name: 'rxjava', version: '1.0.3'
        compile group: 'com.google.code.gson', name: 'gson', version: '2.3.1'
        compile group: 'io.netty', name: 'netty-all', version: '5.0.0.Alpha1'
        compile group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.0'
        compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.3.6'
        compile group: 'com.google.guava', name: 'guava', version: '18.0'
        compile group: 'mysql', name: 'mysql-connector-java', version: '5.1.34'
        compile group: 'it.unimi.dsi', name: 'fastutil', version: '6.5.16'
        compile group: 'com.squareup.pagerduty', name: 'pagerduty-incidents', version: '1.0.1'
        testCompile group: 'junit', name: 'junit', version: '4.12'
    }
}

configure(subprojects.findAll {subproject -> subproject.name in ['dns', 'hyperlord', 'overlord', 'cli']}) {
    apply plugin: 'java'
    apply plugin: 'application'
    apply plugin: 'docker'


    docker {
        group = System.getenv('NEXTOP_DOCKER_GROUP')
        version = System.getenv('NEXTOP_SERVICE_BASE_DOCKER_TAG') + '-' +
                org.ajoberstar.grgit.Grgit.open(project.file('..')).head().id.substring(0, 12)
        maintainer = System.getenv('NEXTOP_DOCKER_MAINTAINER')
        baseImage System.getenv('NEXTOP_SERVICE_BASE_DOCKER_IMAGE')
    }


    /////// APPLICATION ///////

    /* run -Pcl="[...]" */
    run {
        if (project.hasProperty('cl')) {
            args Eval.me(cl)
        }
    }
}
